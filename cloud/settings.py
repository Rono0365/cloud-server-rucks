"""
Django settings for cloud project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new one: Run `python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'` on VPS
#SECRET_KEY = 'your-new-generated-secret-key-here'  # Replace with output from command above!
SECRET_KEY = 'django-insecure-uc3-)aex9*g8(c4&agfs*nt5^fmp%rb)8!qu5$b!uaopvg_^_$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Tighten for prod: Remove '*' wildcar
ALLOWED_HOSTS = [
    'rucks.cc',
    'www.rucks.cc',  # Optional: if you use www subdomain
    '68.168.222.218',  # Your VPS IP
    'localhost',
    'api.rucks.co.ke',
    '127.0.0.1',
]
# This line correctly allows all origins for development.
CORS_ALLOW_ALL_ORIGINS = True  # Set to False later; use CORS_ALLOWED_ORIGINS = ['https://your-frontend.com']

# To fix the error, this was commented out. You should use either
# CORS_ALLOW_ALL_ORIGINS = True or a specific list, but not both
# in a way that causes a conflict.
# CORS_ALLOWED_ORIGINS = [
#     "*",
# ]
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]
# If you need to allow credentials (cookies, etc.)
CORS_ALLOW_CREDENTIALS = False
# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloud2',
    'channels',
     # Ensure this is included
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Ensure this is included
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Also needed 
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cloud.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cloud.wsgi.application'
ASGI_APPLICATION = 'cloud.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
CORS_ALLOWED_ORIGINS = [
    'https://rucks.cc',
    'https://rucks.netlify.app',  # If hosted on Netlify
    ]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'  # Changed from 'static/' for absolute path in prod
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Add this: Where collectstatic dumps files for Nginx

# Media files (user uploadsâ€”if you use them)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'  # Add this for uploaded files

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # Add this
    )
}
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}
